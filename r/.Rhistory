# Import dataset
df = read.csv('Mail_Customers.csv')
# Import dataset
df = read.csv('Mall_Customers.csv')
View(df)
View(df)
# Select appropriate columns
X = df[4:5]
install.packages('clusterR')
library(clusterR)
install.packages('ClusterR')
library(ClusterR)
# Find optimal number of clusters
max_clusters = 10
crit = "AIC" #AIC or BIC
best_k = OptimalClustersKMeans(X,
max_clusters=max_clusters,
criterion=crit,
initializer="kmeans++",
seed=42)
max_clusters = 10
crit = "AIC" #AIC or BIC
best_k = Optimal_Clusters_KMeans(X,
max_clusters=max_clusters,
criterion=crit,
initializer="kmeans++",
seed=42)
best_k
max_clusters = 10
crit = "WCSSE" #AIC or BIC
best_k = Optimal_Clusters_KMeans(X,
max_clusters=max_clusters,
criterion=crit,
initializer="kmeans++",
seed=42)
model = KMeans(X, 4)
plot(model)
model = kmeans(X, 4)
plot(model)
model
kmeans(X, 6)
kmeans(X,7)
KMeans_rcpp(X, 4)
km = KMeans_rcpp(X, 4)
predict_KMeans(X, km$centroids)
max_clusters = 10
crit = "AIC" #AIC or BIC
best_k = Optimal_Clusters_KMeans(X,
max_clusters=max_clusters,
criterion=crit,
initializer="kmeans++",
seed=42)
max_clusters = 50
crit = "AIC" #AIC or BIC
best_k = Optimal_Clusters_KMeans(X,
max_clusters=max_clusters,
criterion=crit,
initializer="kmeans++",
seed=42)
